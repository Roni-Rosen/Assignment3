name: assignment3

on:
  push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image and export
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          tags: mealsService:latest
          outputs: type=docker,dest=/tmp/image.tar
        #   echo "image successfully built" >> log.txt || echo "image not able to be built" >> log.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: meals
          path: /tmp/image.tar
      
#  test:
#    needs: build
#    runs-on: ubuntu-latest
#
#    steps:
#    # download image and run it in a container
#      - name: Download artifact
#        uses: actions/download-artifact@v3
#      - name: Load Docker image from previous job
#        run: docker load --input meals/image.tar
#      - name: check meals image is loaded
#        run: docker image ls
#      - name: run image in container
#        run: docker run -d -p8000:8000 mealsService
#      - name: Check container is running
#        run: docker ps
#      # set up python and pytest environment
#      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Set up Python
#        uses: actions/setup-python@v4
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install pytest
#          pip install requests
#          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#
#      # run pytest tests and check results
#      - name: Test with pytest
#        run: |
#          cd pytest-code
#          pytest -v test_word.py > assn3_test_results.txt
#      # pytest-code is name of directory in which the pytest code is
#      - name: upload test results
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: GH_assn3_test_results
#          path: pytest-code/assn3_test_results.txt

      # - name: Set DATE
      #   run: echo "DATE=$(date -I)" >> $GITHUB_ENV

      # push to github?? why dockerhub


#  query:
#    needs: test
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Run Docker container
#        id: run
#        run: |
#          docker run -d -p 8000:8000 myservice
#
#      - name: Issue queries to the service
#        run: |
#          # insert your code here to issue queries and save results in a file
#
#      - name: Upload artifacts
#        uses: actions/upload-artifact@v3
#        with:
#          name: output
#          path: |
#            log.txt
#            assn3_test_results.txt
#            # path to your query results file
