name: assignment3

on:
  push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log Start Time
        run: echo "$(date --Iminutes)"> log.txt # didnt work, fix
      - name: Log Submitter Name
        run: echo "Michal Ad and Roni Rosen" >> log.txt
      - name: Build Docker image and export
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          tags: meals_service:latest
          outputs: type=docker,dest=/tmp/image.tar
      - name: Log Image Built Status
        run: if [ $? -eq 0 ]; then echo "image successfully built" >> log.txt; else echo "image not able to be built" >> log.txt; fi
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: meals
          path: /tmp/image.tar
      - name: upload log file
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-log
          path: log.txt
      
  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    # download image and run it in a container
      - name: Download artifact
        uses: actions/download-artifact@v3
      - name: Download log artifact
        uses: actions/download-artifact@v3
        with:
          name: build-log
      - name: Update log
        run: |
          value=`cat log.txt`
          echo $value > log.txt
      - name: Load Docker image from previous job
        run: docker load --input meals/image.tar
      - name: check meals image is loaded
        run: docker image ls
      - name: run image in container
        run: docker run -p8000:8000 meals_service &
      - name: Log Container Status
        run: if [ $? -eq 0 ]; then echo "Container up and running" >> build-log/log.txt; else echo "Container failed to run" >> build-log/log.txt; fi
      - name: Check container is running
        run: docker ps
      # set up python and pytest environment
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install requests
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      # run pytest tests and check results
      - name: Test with pytest
        run: |
          cd tests
          pytest -v assn3_tests.py > assn3_test_results.txt
      - name: Log Test Status
        run: if [ $? -eq 0 ]; then echo "tests succeeded" >> build-log/log.txt; else echo "tests failed" >> build-log/log.txt; fi
      - name: upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: GH_assn3_test_results
          path: tests/assn3_test_results.txt
      - name: upload log file
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: GH_assn3_log
          path: build-log/log.txt

      # - name: Set DATE
      #   run: echo "DATE=$(date -I)" >> $GITHUB_ENV
